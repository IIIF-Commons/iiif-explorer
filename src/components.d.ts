/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface IiifExplorerBreadcrumb {
      'collection': Manifesto.ICollection;
    }
  }

  interface HTMLIiifExplorerBreadcrumbElement extends StencilComponents.IiifExplorerBreadcrumb, HTMLStencilElement {}

  var HTMLIiifExplorerBreadcrumbElement: {
    prototype: HTMLIiifExplorerBreadcrumbElement;
    new (): HTMLIiifExplorerBreadcrumbElement;
  };
  interface HTMLElementTagNameMap {
    'iiif-explorer-breadcrumb': HTMLIiifExplorerBreadcrumbElement;
  }
  interface ElementTagNameMap {
    'iiif-explorer-breadcrumb': HTMLIiifExplorerBreadcrumbElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'iiif-explorer-breadcrumb': JSXElements.IiifExplorerBreadcrumbAttributes;
    }
  }
  namespace JSXElements {
    export interface IiifExplorerBreadcrumbAttributes extends HTMLAttributes {
      'collection'?: Manifesto.ICollection;
      'onOnSelectBreadcrumb'?: (event: CustomEvent) => void;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface IiifExplorerItem {
      'item': Manifesto.IIIIFResource;
      'selected': boolean;
    }
  }

  interface HTMLIiifExplorerItemElement extends StencilComponents.IiifExplorerItem, HTMLStencilElement {}

  var HTMLIiifExplorerItemElement: {
    prototype: HTMLIiifExplorerItemElement;
    new (): HTMLIiifExplorerItemElement;
  };
  interface HTMLElementTagNameMap {
    'iiif-explorer-item': HTMLIiifExplorerItemElement;
  }
  interface ElementTagNameMap {
    'iiif-explorer-item': HTMLIiifExplorerItemElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'iiif-explorer-item': JSXElements.IiifExplorerItemAttributes;
    }
  }
  namespace JSXElements {
    export interface IiifExplorerItemAttributes extends HTMLAttributes {
      'item'?: Manifesto.IIIIFResource;
      'onOnSelectItem'?: (event: CustomEvent) => void;
      'selected'?: boolean;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface IiifExplorer {
      'manifest': string;
      'reset': () => void;
      'upLevelEnabled': boolean;
    }
  }

  interface HTMLIiifExplorerElement extends StencilComponents.IiifExplorer, HTMLStencilElement {}

  var HTMLIiifExplorerElement: {
    prototype: HTMLIiifExplorerElement;
    new (): HTMLIiifExplorerElement;
  };
  interface HTMLElementTagNameMap {
    'iiif-explorer': HTMLIiifExplorerElement;
  }
  interface ElementTagNameMap {
    'iiif-explorer': HTMLIiifExplorerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'iiif-explorer': JSXElements.IiifExplorerAttributes;
    }
  }
  namespace JSXElements {
    export interface IiifExplorerAttributes extends HTMLAttributes {
      'manifest'?: string;
      'onOnSelectCollection'?: (event: CustomEvent) => void;
      'onOnSelectManifest'?: (event: CustomEvent) => void;
      'onOnUpLevel'?: (event: CustomEvent) => void;
      'upLevelEnabled'?: boolean;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
